# Alarm
- alias: Set off alarm while armed away
  id: alarm-trigger-away
  trigger:
    - entity_id: binary_sensor.ians_left_window_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_entry_door_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_right_window_status
      from: 'off'
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
  hide_entity: true
  initial_state: true
- alias: Set off alarm while armed night
  id: alarm-trigger-night
  trigger:
    - entity_id: binary_sensor.ians_left_window_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_right_window_status
      from: 'off'
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_night
  action:
    - service: alarm_control_panel.alarm_trigger
  hide_entity: true
  initial_state: true
- alias: Set off alarm while armed home
  id: alarm-trigger-home
  trigger:
    - entity_id: binary_sensor.ians_left_window_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_right_window_status
      from: 'off'
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_home
  action:
    - service: alarm_control_panel.alarm_trigger
  hide_entity: true
  initial_state: true

# NWS Alerts
- alias: NWS Notification Weather Alert Ian
  id: nws-alert-ian
  trigger:
    - platform: state
      entity_id: sensor.nws_advisory
  condition:
    - condition: template
      value_template: '{{states.sensor.nws_advisory.state | int > 0}}'
    - condition: template
      value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float
        }}'
  action:
    - service: notify.ios_ians_iphone
      data_template:
        title: "{% if states.sensor.nws_advisory.attributes.title.split(' - ')[5] is\
          \ defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[5] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[4] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[4] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[3] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[3] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[2] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[2] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[1] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[1] }}\"\n{% else %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[0] }}\"\n{% endif %}\n"
        message: "{{ states.sensor.nws_advisory.attributes.display_desc }}"
- alias: NWS Notification Weather Alert Kassandra
  id: nws-alert-kassandra
  trigger:
    - platform: state
      entity_id: sensor.nws_advisory
  condition:
    - condition: template
      value_template: '{{states.sensor.nws_advisory.state | int > 0}}'
    - condition: template
      value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float
        }}'
  action:
    - service: notify.ios_kassandras_iphone
      data_template:
        title: "{% if states.sensor.nws_advisory.attributes.title.split(' - ')[5] is\
          \ defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[5] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[4] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[4] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[3] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[3] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[2] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[2] }}\"\n{% elif states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[1] is defined %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[1] }}\"\n{% else %}\n  \"NWS: {{ states.sensor.nws_advisory.attributes.title.split('\
          \ - ')[0] }}\"\n{% endif %}\n"
        message: "{{ states.sensor.nws_advisory.attributes.display_desc }}"
- alias: NWS Announce Weather Alert
  id: nws-alert-tts
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.nws_advisory
  condition:
    - condition: template
      value_template: '{{states.sensor.nws_advisory.state | int > 0}}'
    - condition: template
      value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float
        }}'
    - condition: template
      value_template: '{{ ((''Severe'' in states.sensor.nws_advisory.attributes.title)
        or (''Tornado'' in states.sensor.nws_advisory.attributes.title)) and ''Warning''
        in states.sensor.nws_advisory.attributes.title }}'
  action:
    - service: tts.google_translate_say
      data_template:
        entity_id: all
        message: "{% if states.sensor.nws_advisory.attributes.spoken_desc.split('\\n\\\
          n-\\n\\n')[5] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[5] }}.\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[4] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[4] }}\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[3] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[3] }}\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[2] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[2] }}\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[1] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[1] }}\n{% else %}\n  Attention!,,,Attention!,,,The National\
          \ Weather Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[0] }}\n{% endif %}\n"
    - delay: 00:00:15
    - service: tts.google_translate_say
      data_template:
        entity_id: all
        message: "{% if states.sensor.nws_advisory.attributes.spoken_desc.split('\\n\\\
          n-\\n\\n')[5] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[5] }}.\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[4] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[4] }}\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[3] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[3] }}\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[2] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[2] }}\n{% elif states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[1] is defined %}\n  Attention!,,,Attention!,,,The National Weather\
          \ Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[1] }}\n{% else %}\n  Attention!,,,Attention!,,,The National\
          \ Weather Service Has issued a {{ states.sensor.nws_advisory.attributes.spoken_desc.split('\\\
          n\\n-\\n\\n')[0] }}\n{% endif %}\n"
    - delay: 00:00:15
    - service: remote.send_command
      entity_id: remote.living_room_apple_tv
      data:
        command: 'menu'

# Reminders and Alerts
- alias: Startup Reminder
  id: reminder-startup
  trigger:
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: input_boolean.notify_ian
      state: 'on'
  action:
    - data:
        data:
          push:
            badge: 1
        title: Homeassistant Started!
        message: Make sure to check everything works.
      service: notify.ios_ians_iphone
  hide_entity: true
  initial_state: true
- alias: Shutdown Reminder
  id: reminder-shutdown
  trigger:
    - platform: homeassistant
      event: shutdown
  condition:
    - condition: state
      entity_id: input_boolean.notify_ian
      state: 'on'
  action:
    - data:
        data:
          push:
            badge: 1
        title: Homeassistant Shutdown!
        message: If this was not on purpose, you may want to restart it now.
      service: notify.ios_ians_iphone
  hide_entity: true
  initial_state: true
- alias: Garbage and Recycling Reminder Ian
  id: reminder-garbage-ian
  trigger:
    - platform: time
      at: '19:00:00'
  condition:
    - condition: time
      weekday:
        - thu
    - condition: state
      entity_id: input_boolean.notify_ian
      state: 'on'
  action:
    - data:
        data:
          push:
            badge: 1
        title: Garbage and Recycling Tomorrow!
        message: Remember to take out the cans
      service: notify.ios_ians_iphone
  hide_entity: true
  initial_state: true
- alias: Garbage and Recycling Reminder Kassandra
  id: reminder-garbage-kassandra
  trigger:
    - platform: time
      at: '19:00:00'
  condition:
    - condition: time
      weekday:
        - thu
    - condition: state
      entity_id: input_boolean.notify_kassandra
      state: 'on'
  action:
    - data:
        data:
          push:
            badge: 1
        title: Garbage and Recycling Tomorrow!
        message: Remember to take out the cans
      service: notify.ios_kassandras_iphone
  hide_entity: true
  initial_state: true
- alias: Version Update Reminder
  id: reminder-version
  trigger:
    - platform: sun
      event: sunrise
  condition:
    - condition: template
      value_template: "{{ states.sensor.available_ha_version.state != states.sensor.installed_ha_version.state }}"
    - condition: state
      entity_id: input_boolean.notify_ian
      state: 'on'
  action:
    - data_template:
        data:
          push:
            badge: 1
        title: "Homeassistant has an update available!"
        message: "Run the update.sh script in ~/volume-docker The new version is {{ states.sensor.available_ha_version.state }}"
      service: notify.ios_ians_iphone
  hide_entity: true
  initial_state: true

# Time Triggers
- alias: Sunrise Changes
  id: time-sunrise
  trigger:
    - platform: sun
      event: sunrise
  action:
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.guest_mode
  hide_entity: true
  initial_state: true
