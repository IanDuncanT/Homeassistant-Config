# Alarm Triggers
- id: '1530556498503'
  alias: Set off alarm while armed away
  trigger:
    - entity_id: binary_sensor.ians_left_window_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_entry_door_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_right_window_status
      from: 'off'
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
  hide_entity: true
  initial_state: true

- id: '1530909494277'
  alias: Set off alarm while armed night
  trigger:
    - entity_id: binary_sensor.ians_left_window_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_right_window_status
      from: 'off'
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_night
  action:
    - service: alarm_control_panel.alarm_trigger
  hide_entity: true
  initial_state: true

- id: 8d7e0b89890040e6aa56d6b2757f40a3
  alias: Set off alarm while armed home
  trigger:
    - entity_id: binary_sensor.ians_left_window_status
      from: 'off'
      platform: state
      to: 'on'
    - entity_id: binary_sensor.ians_right_window_status
      from: 'off'
      platform: state
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_home
  action:
    - service: alarm_control_panel.alarm_trigger
  hide_entity: true
  initial_state: true

- id: 'login-1'
  alias: "Send notification upon failed login attempt"
  trigger:
    - platform: state
      entity_id: persistent_notification.httplogin
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  action:
    - service: notify.pushbullet_ian
      data_template:
        title: "Failed Home Assistant login attempt!"
        message: "{{ trigger.to_state.state }}"
        data:
          url: http://www.ip-tracker.org/locator/ip-lookup.php?ip={{ states.persistent_notification.httplogin.state.split ("from ") [1]}}

# Reminders
- id: '1552519352232'
  alias: Garbage and Recycling Reminder
  trigger:
    - platform: time
      at: 08:00:00
  condition:
    - condition: time
      weekday:
        - fri
  action:
    - data:
        data:
          push:
            badge: 1
        title: Garbage and Recycling Day!
        message: Remember to take out the cans
      service: notify.ios_ians_iphone
  hide_entity: true
  initial_state: true

# Camera Notifications
- id: 'camera-ian-1'
  alias: 'Bedroom Security'
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.ians_entry_door_status
    from: 'off'
    to: 'on'
  condition:
    condition: template
    value_template: "{{ states.person.ian.state != 'home' }}"
  action:
    service: notify.ios_ians_iphone
    data:
      title: 'Door Opened'
      message: 'What action would you like to take?'
      data:
        attachment:
          content-type: png
        push:
          category: 'camera'
        entity_id: camera.main_rpi_cam

- id: 'alarm-trigger'
  alias: 'Trigger Alarm From Camera'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'TRIGGER_ALARM'
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm

- id: 'alarm-tts-speak'
  alias: 'Speak Text from Alarm TTS'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'TTS_MESSAGE'
  action:
    - service: tts.google_say
      entity_id: 'all'
      data_template:
        message: "{{ trigger.event.data['textInput'] }}"

# NWS Warning Services
- alias: 'NWS Weather Alert Pop Up Control'
  id: 'nws-alert-1'
  trigger:
    platform: state
    entity_id: sensor.nws_alerts
  condition:
    - condition: template
      value_template: '{{states.sensor.nws_alerts.state | int > 0}}'
    - condition: template
      value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float }}'
  action:
    service: script.nws_popup_on_wx_alert
    data_template:
      title: >
        {% if states.sensor.nws_alerts.attributes.title.split(' - ')[5] is defined %}
          "{{ states.sensor.nws_alerts.attributes.title.split(' - ')[5] }}"
        {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[4] is defined %}
          "{{ states.sensor.nws_alerts.attributes.title.split(' - ')[4] }}"
        {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[3] is defined %}
          "{{ states.sensor.nws_alerts.attributes.title.split(' - ')[3] }}"
        {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[2] is defined %}
          "{{ states.sensor.nws_alerts.attributes.title.split(' - ')[2] }}"
        {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[1] is defined %}
          "{{ states.sensor.nws_alerts.attributes.title.split(' - ')[1] }}"
        {% else %}
          "{{ states.sensor.nws_alerts.attributes.title.split(' - ')[0] }}"
        {% endif %}
      message: >
        {% if states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[5] is defined %}
          "{{ states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[5] }}"
        {% elif states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[4] is defined %}
          "{{ states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[4] }}"
        {% elif states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[3] is defined %}
          "{{ states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[3] }}"
        {% elif states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[2] is defined %}
          "{{ states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[2] }}"
        {% elif states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[1] is defined %}
          "{{ states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[1] }}"
        {% else %}
          "{{ states.sensor.nws_alerts.attributes.display_desc.split('\n\n-\n\n')[0] }}"
        {% endif %}

- alias: NWS Notification Weather Alert
  id: 'nws-alert-2'
  trigger:
    platform: state
    entity_id: sensor.nws_alerts
  condition:
    - condition: template
      value_template: '{{states.sensor.nws_alerts.state | int > 0}}'
    - condition: template
      value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float }}'
  action:
    - service: notify.ios_ians_iphone
      data_template:
        message: >
          {% if states.sensor.nws_alerts.attributes.title.split(' - ')[5] is defined %}
            "NWS: {{ states.sensor.nws_alerts.attributes.title.split(' - ')[5] }}"
          {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[4] is defined %}
            "NWS: {{ states.sensor.nws_alerts.attributes.title.split(' - ')[4] }}"
          {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[3] is defined %}
            "NWS: {{ states.sensor.nws_alerts.attributes.title.split(' - ')[3] }}"
          {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[2] is defined %}
            "NWS: {{ states.sensor.nws_alerts.attributes.title.split(' - ')[2] }}"
          {% elif states.sensor.nws_alerts.attributes.title.split(' - ')[1] is defined %}
            "NWS: {{ states.sensor.nws_alerts.attributes.title.split(' - ')[1] }}"
          {% else %}
            "NWS: {{ states.sensor.nws_alerts.attributes.title.split(' - ')[0] }}"
          {% endif %}

- alias: NWS Announce Weather Alert
  id: 'nws-alert-3'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.nws_alerts
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.sensor.nws_alerts.state | int > 0}}"
      - condition: template
        value_template: '{{ trigger.to_state.state|float > trigger.from_state.state|float }}'
      - condition: template
        value_template: "{{ (('Severe' in states.sensor.nws_alerts.attributes.title) or ('Tornado' in states.sensor.nws_alerts.attributes.title)) and 'Warning' in states.sensor.nws_alerts.attributes.title }}"
  action:
    - service: tts.google_say
      data_template:
        entity_id: 'all'
        message: >
          {% if states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[5] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[5] }}.
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[4] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[4] }}
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[3] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[3] }}
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[2] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[2] }}
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[1] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[1] }}
          {% else %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[0] }}
          {% endif %}
    - delay: '00:00:15'
    - service: tt.google_say
      data_template:
        entity_id: 'all'
        message: >
          {% if states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[5] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[5] }}.
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[4] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[4] }}
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[3] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[3] }}
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[2] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[2] }}
          {% elif states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[1] is defined %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[1] }}
          {% else %}
            Attention!,,,Attention!,,,The National Weather Service Has issued a {{ states.sensor.nws_alerts.attributes.spoken_desc.split('\n\n-\n\n')[0] }}
          {% endif %}
